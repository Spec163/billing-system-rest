
spring.datasource.url=jdbc:postgresql://localhost/billing-system
spring.datasource.username=postgres
spring.datasource.password=123
spring.jpa.generate-ddl=true
spring.datasource.driver-class-name=org.postgresql.Driver


# Google oauth2
security.oauth2.client.clientId=147063819121-m87m0qusdkot71j4d77be9m4cj9rq2dj.apps.googleusercontent.com
security.oauth2.client.clientSecret=${clientSecret}
security.oauth2.client.clientAuthenticationScheme=form
security.oauth2.client.scope=openid,email,profile
security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v4/token
security.oauth2.client.userAuthorizationUri=https://accounts.google.com/o/oauth2/v2/auth
security.oauth2.resource.userInfoUri=https://www.googleapis.com/oauth2/v3/userinfo
security.oauth2.resource.preferTokenInfo=true

#spring.profiles.active=dev - добавлено в переменные среды


spring.session.jdbc.initialize-schema=always
spring.session.jdbc.table-name=SPRING_SESSION
spring.session.jdbc.schema=classpath:session_tables.sql

# Fix Postgres JPA Error:
# Method org.postgresql.jdbc.PgConnection.createClob() is not yet implemented.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.thymeleaf.cache=false

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true

spring.jpa.hibernate.ddl-auto=create

